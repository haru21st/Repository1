githubを勉強中

1. githubの基本の流れ
＜初回のみ＞
　・リモートリポジトリ作成
  ・ローカルリポジトリ作成
＜操作＞
　・ファイル作成、編集
　・git add ファイル名
　・git commit -m "コミットメッセージを記入"
　・git push origin master

2. ブランチ
　複数に分岐して履歴を残す（開発を行う）ことができる機能
＜操作＞
　・git branch ブランチ名　：ブランチの作成
　・git checkout ブランチ名：ブランチの移動
　・git branch             ：今作業しているブランチの確認

★ブランチを作成した時点から分岐が開始する
　（新規ブランチ作成時点までの情報は引き継がれ、
　　以降の作業内容は作業しているブランチのみで反映される。）

3. マージ
　ブランチを結合する項とができる機能
＜操作＞
　・git checkout ブランチ名　　：マージするブランチに移動
　・git merge ブランチ名　　　 ：マージ対象のブランチ名を選択
　・git push origin ブランチ名 ：マージしたブランチをプッシュ

★mergeを実行した際、vimが起動したら、
 コミットメーセージ不要の場合は「:q!」で強制終了でOK

4. コンフリクト
　マージした際に「変更が重複してけどどっちを採用する？」と教えてくれる機能
＜作業＞
　・vim ファイル名　：コンフリクトを起こしているファイルを開く
　・採用する内容のみ残して、他の内容を全て削除
　・:wq             ：保存して終了

★上記でマージ完了。基本操作（add〜push）まで実行する。

5. リバート
　リモートリポジトリにある特定のコミットを取り消す機能
　※正確には、取り消したコミットを打ち消すコミットを作成する処理
＜作業＞
　・git revert 取り消したいコミットID
　・git push origin ブランチ名

★コミットIDは、git log でも検索可能
　git revert を実行した際、vimが起動したら「:q!」で強制終了でOK

6. リセット
　①commitの取り消し、②addの取り消し、③編集した内容をローカルファイルごと取り消しができる機能
＜作業＞
　①git reset --soft コミットID（もしくは「HEAD^」
　②git reset --mixed コミットID（もしくは「HEAD^」
　③git reset --head コミットID（もしくは「HEAD^」

★「HEAD^」は「直前の」という意味




